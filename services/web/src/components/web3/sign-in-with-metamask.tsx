'use client';

import React, { useState } from 'react';
import { BrowserProvider, Eip1193Provider, ethers } from 'ethers';
import { Button } from '@game-guild/ui';

declare global {
  interface Window {
    ethereum?: Eip1193Provider;
  }
}

export function SignInWithMetamask() {

  const [provider, setProvider] = useState<BrowserProvider | null>(null);
  const [accountAddress, setAccountAddress] = useState<string | null>(null);

  const connectToMetaMask = async () => {
    try {
      if (window.ethereum) {

        const ethereum = window.ethereum;

        await ethereum.request({ method: 'eth_requestAccounts' });

        const provider = new BrowserProvider(window.ethereum);

        const signer = await provider.getSigner();
        const accountAddress = await signer.getAddress();

        setProvider(provider);
        setAccountAddress(accountAddress);

        // TODO: Request a message to be signed.
        // const challengeResponse = await fetch('api/auth/web3/sign-in');
        // const { message } = await challengeResponse.json();

        // const message = 'Sign in with Metamask';

        // TODO: Request for Metamask to sign the message.
        // const signature = await ethereum.request({
        //   method: 'personal_sign',
        //   params: [JSON.stringify(message), accountAddress],
        // });
        // TODO: this message should be generated by the server and sent to the client.
        // const siweMessage = `${window.location.host} wants you to sign in with your Ethereum account:\n${accountAddress}\n\nI accept the MetaMask Terms of Service: https://community.metamask.io/tos\n\nURI: https://${window.location.host}\nVersion: 1\nChain ID: 1\nNonce: 32891757\nIssued At: 2021-09-30T16:25:24.000Z`;
        // const msg = `0x${Buffer.from(siweMessage, 'utf8').toString('hex')}`;
        //
        // const s = await ethereum.request({
        //   method: 'personal_sign',
        //   params: [msg, accountAddress],
        // });

        // TODO: Verify the signature on the server.
        // const validationResponse = await fetch('api/auth/web3/sign-in', {
        //   method: 'POST',
        //   headers: {
        //     'Content-Type': 'application/json',
        //   },
        //   body: JSON.stringify({
        //     accountAddress: accountAddress,
        //     message: message,
        //     signature: signature,
        //   }),
        // });

      } else {
        console.error('Metamask is not detected.');
      }
    } catch (error) {
      console.error('Error connecting to Metamask:', error);
    }
  };

  return (<Button onClick={connectToMetaMask}>{accountAddress ?? 'Sign In with Metamask'}</Button>);
}
